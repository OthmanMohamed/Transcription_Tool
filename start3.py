# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'start3.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
from PyQt5 import QtMultimedia
import glob
from editor import editor_window

class Second(QtWidgets.QMainWindow):
    def __init__(self, parent=None):
        super(Second, self).__init__(parent)

class audio_player(QtMultimedia.QMediaPlayer):
    def __init__(self):
        super(audio_player, self).__init__()
        self.currentDataHolder = ""

    def change_media(self, url, dataholder_name):
        self.currentDataHolder = dataholder_name
        self.url = url
        self.content = QtMultimedia.QMediaContent(QtCore.QUrl.fromLocalFile(self.url))
        self.setMedia(self.content)

class data_holder(object):
    def __init__(self, parent_object, text, wav_url, text_url, dataholder_name, file_name):
        self.text = text
        self.parent_object = parent_object
        self.wav_url = wav_url
        self.txt_url = text_url
        self.dataholder_name = dataholder_name
        self.file_name = file_name
        self.audio_position = 0
        self.audio_duration = 0

        self.frame_3 = QtWidgets.QFrame(self.parent_object)
        self.frame_3.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setMinimumSize(QtCore.QSize(900, 101))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_2 = QtWidgets.QFrame(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(20)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.progressBar = QtWidgets.QSlider(QtCore.Qt.Horizontal, self.frame_2)
        self.gridLayout_3.addWidget(self.progressBar, 0, 0, 1, 3)
        self.toolButton = QtWidgets.QToolButton(self.frame_2)
        self.toolButton.setText("")
        self.toolButton.setIcon(QIcon('play.png'))
        self.toolButton.setObjectName("toolButton")
        self.toolButton.clicked.connect(self.play)
        self.gridLayout_3.addWidget(self.toolButton, 1, 0, 1, 1)
        self.toolButton_3 = QtWidgets.QToolButton(self.frame_2)
        self.toolButton_3.setText("")
        self.toolButton_3.setIcon(QIcon('pause.png'))
        self.toolButton_3.setObjectName("toolButton_3")
        self.toolButton_3.clicked.connect(self.pause)
        self.gridLayout_3.addWidget(self.toolButton_3, 1, 1, 1, 1)
        self.toolButton_2 = QtWidgets.QToolButton(self.frame_2)
        self.toolButton_2.setText("")
        self.toolButton_2.setIcon(QIcon('stop.png'))
        self.toolButton_2.setObjectName("toolButton_2")
        self.toolButton_2.clicked.connect(self.stop)
        self.gridLayout_3.addWidget(self.toolButton_2, 1, 2, 1, 1)
        self.horizontalLayout.addWidget(self.frame_2)
        self.frame_4 = QtWidgets.QFrame(self.frame_3)
        self.frame_4.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(70)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
        self.frame_4.setSizePolicy(sizePolicy)
        self.frame_4.setAutoFillBackground(False)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(40)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect((lambda: self.save_text("lineEdit")))
        self.gridLayout_4.addWidget(self.pushButton_2, 1, 2, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.frame_4)

        self.lineEdit.setObjectName("lineEdit")
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit.setFont(font)
        self.lineEdit.setReadOnly(True)
        self.gridLayout_4.addWidget(self.lineEdit, 0, 0, 1, 3)
        self.radioButton = QtWidgets.QRadioButton(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(20)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton.sizePolicy().hasHeightForWidth())
        self.radioButton.setSizePolicy(sizePolicy)
        self.radioButton.setObjectName("radioButton")
        self.radioButton.clicked.connect(self.allow_edit_text)
        self.gridLayout_4.addWidget(self.radioButton, 1, 0, 1, 1)

        self.pushButton = QtWidgets.QPushButton(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(40)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.open_editor)

        self.dialog = editor_window()

        self.gridLayout_4.addWidget(self.pushButton, 1, 1, 1, 1)
        self.horizontalLayout.addWidget(self.frame_4)
        self.frame_5 = QtWidgets.QFrame(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
        self.frame_5.setSizePolicy(sizePolicy)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label = QtWidgets.QLabel(self.frame_5)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_5.addWidget(self.label, 0, 0, 1, 1)
        self.horizontalLayout.addWidget(self.frame_5)
        self.spacerItem = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)

        player.positionChanged.connect(lambda: self.changeLabel(self.progressBar))
        self.retranslateUi()

    def open_editor(self):
        self.dialog.setupUi(self.text)
        self.dialog.saveButton.clicked.connect(lambda: self.save_text("dialog"))
        player.change_media(self.wav_url, self.dataholder_name)
        self.parent_object.setEnabled(False)
        self.dialog.show()
        self.dialog.quit.connect(self.close_editor)
        self.dialog.playButton.clicked.connect(self.play)
        self.dialog.pauseButton.clicked.connect(self.pause)
        self.dialog.stopButton.clicked.connect(self.stop)
        player.positionChanged.connect(lambda: self.changeLabel(self.dialog.horizontalSlider))

    def close_editor(self):
        self.parent_object.setEnabled(True)

    def allow_edit_text(self):
        if self.radioButton.isChecked():
            self.lineEdit.setReadOnly(False)
            self.lineEdit.setFocus()
        else:
            self.lineEdit.setReadOnly(True)

    def save_text(self, src):
        print("done")
        file = open(self.txt_url, 'w')
        if src == "lineEdit":
            text = self.lineEdit.text()
        elif src == "dialog":
            text = self.dialog.plainTextEdit.toPlainText()
            self.lineEdit.setText(text)
        file.write(text)
        file.close()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_2.setText(_translate("MainWindow", "Save"))
        self.radioButton.setText(_translate("MainWindow", "Edit"))
        self.pushButton.setText(_translate("MainWindow", "Open Editor"))
        self.label.setText(_translate("MainWindow", self.file_name))
        self.lineEdit.setText(self.text)

    def changeLabel(self, currentProgressBar):
        if self.dataholder_name == player.currentDataHolder:
            if player.duration() == 0:
                progress_value = 0
            else:
                progress_value = int((player.position() / player.duration()) * 100)
            currentProgressBar.setSliderPosition(progress_value)
            print(progress_value)

    def play(self):
        player.change_media(self.wav_url, self.dataholder_name)
        player.setPosition(self.audio_position)
        player.play()
        self.update_media_status()

    def pause(self):
        player.pause()
        self.update_media_status()

    def stop(self):
        player.stop()
        self.update_media_status()
        self.audio_position = 0

    def update_media_status(self):
        self.audio_position = player.position()
        self.audio_duration = player.duration()



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1169, 790)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setEnabled(True)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1149, 726))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")

        self.read_data("/home/othman/Downloads/Nos_Ketab_Final/GUI_trial/")
        self.read_wavs("/home/othman/Downloads/Nos_Ketab_Final/GUI_trial/")

        global player
        player = audio_player()
        content = QtMultimedia.QMediaContent(QtCore.QUrl.fromLocalFile(self.wav_paths[0]))
        player.setMedia(content)

        # for j in range (100):
        #     for i, text_url in enumerate(self.text_paths):
        #         file = open(text_url, "r")
        #         text = file.read()
        #         # print(text)
        #         wav_url = self.wav_paths[i]
        #         url_split = wav_url.split("/")
        #         dataholder_name = "dataholder" + str(i + j*10)
        #         exec("self." + dataholder_name + "= data_holder(self.centralwidget, text, wav_url, text_url, dataholder_name, url_split[-1])")
        #         exec("self.verticalLayout.addWidget(self." + dataholder_name + ".frame_3)")
        #         exec("self.verticalLayout.addItem(self." + dataholder_name + ".spacerItem)")
        for i, text_url in enumerate(self.text_paths):
            file = open(text_url, "r")
            text = file.read()
            # print(text)
            wav_url = self.wav_paths[i]
            url_split = wav_url.split("/")
            dataholder_name = "dataholder" + str(i)
            exec("self." + dataholder_name + "= data_holder(self.centralwidget, text, wav_url, text_url, dataholder_name, url_split[-1])")
            exec("self.verticalLayout.addWidget(self." + dataholder_name + ".frame_3)")
            exec("self.verticalLayout.addItem(self." + dataholder_name + ".spacerItem)")

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1169, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuPlay = QtWidgets.QMenu(self.menubar)
        self.menuPlay.setObjectName("menuPlay")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionPlay_Selected = QtWidgets.QAction(MainWindow)
        self.actionPlay_Selected.setObjectName("actionPlay_Selected")
        self.actionPlay_All = QtWidgets.QAction(MainWindow)
        self.actionPlay_All.setObjectName("actionPlay_All")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuPlay.addAction(self.actionPlay_Selected)
        self.menuPlay.addAction(self.actionPlay_All)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuPlay.menuAction())


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuPlay.setTitle(_translate("MainWindow", "Play"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionPlay_Selected.setText(_translate("MainWindow", "Play Selected"))
        self.actionPlay_All.setText(_translate("MainWindow", "Play All"))

    def read_data(self, path):
        text_paths = path + "*.txt"
        self.text_paths = sorted(glob.glob(text_paths))

    def read_wavs(self, path):
        wav_paths = path + "*.wav"
        self.wav_paths = sorted(glob.glob(wav_paths))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
